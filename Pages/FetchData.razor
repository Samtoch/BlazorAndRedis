@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using BlazorAndRedis.Data.Model;
@using BlazorAndRedis.Repositories
@using BlazorAndRedis.Data
@inject Microsoft.Extensions.Caching.Distributed.IDistributedCache cache

@inject IProductRepository repository


<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Id.</th>
                <th>Name.</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@DateTime.Now</td>
                    <td>@forecast.Id</td>
                    <td>@forecast.Name</td>
                    <td>@forecast.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product> forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await repository.GetProducts();
    }
}
